<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>eZ Publish on Tyler Harms</title><link>https://harmstyler.me/categories/ez-publish/</link><description>Recent content in eZ Publish on Tyler Harms</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 31 Jan 2016 00:00:00 +0000</lastBuildDate><atom:link href="https://harmstyler.me/categories/ez-publish/index.xml" rel="self" type="application/rss+xml"/><item><title>Managing Media in eZ Publish 5</title><link>https://harmstyler.me/posts/2016/managing-media-in-ez-publish/</link><pubDate>Sun, 31 Jan 2016 00:00:00 +0000</pubDate><guid>https://harmstyler.me/posts/2016/managing-media-in-ez-publish/</guid><description>&lt;p>Managing media in an eZ Publish 4 install was always a pain point for me. There were a number of problems
that I had with media in eZ Publish 4 that are now addressed thanks to Symfony. The media I am referring to
in this post are any content types placed in the media category, traditionally images, files, audio files, and video
files.&lt;/p></description></item><item><title>eZ Publish 5 - First Thoughts</title><link>https://harmstyler.me/posts/2013/ez-publish-5-first-thoughts/</link><pubDate>Sat, 19 Jan 2013 00:00:00 +0000</pubDate><guid>https://harmstyler.me/posts/2013/ez-publish-5-first-thoughts/</guid><description>I finally decided on my first eZ Publish 5 project&amp;hellip; my site of course. I am currently in the middle of upgrading my wordpress install to eZ Publish. Honestly, I don&amp;rsquo;t really need anything more than a simple Wordpress install, but it will be nice to get an eZ5 site under my belt.
Seeing as I am in the middle of development, there have been a few bumps in the development road that I have found and would like to share.</description></item><item><title>Optimizing Solr To Fit Your Needs Part 2</title><link>https://harmstyler.me/posts/2012/optimizing-solr-to-fit-your-needs-part-2/</link><pubDate>Fri, 07 Dec 2012 00:00:00 +0000</pubDate><guid>https://harmstyler.me/posts/2012/optimizing-solr-to-fit-your-needs-part-2/</guid><description>&lt;p>I am finally taking the time to write about optimizing the Solr schema file. In my last post I showed that eZ Find already ships with a default search field called &lt;code>ezf_df_text&lt;/code>. The downside of searching one field is that field needs to be controlled, and the only way it can be controlled is by manually editing the Solr schema file. As you might expect, eZ Find does not control this file very well out of the box.&lt;/p></description></item><item><title>Learning Symfony</title><link>https://harmstyler.me/posts/2012/learning-symfony/</link><pubDate>Wed, 21 Nov 2012 00:00:00 +0000</pubDate><guid>https://harmstyler.me/posts/2012/learning-symfony/</guid><description>The blog starts with the basics and explores a good deal of Symfony components in detail. In the end you will be left with a barley usable blog, but that is alright, it leaves you with a project to fix. It is a tutorial for Symfony 2.0, and because Symfony is currently on 2.1.3 you will notice some part don&amp;rsquo;t work the way you expect (but I think that forces you to learn more anyway).</description></item><item><title>Optimizing Solr to fit your needs Part 1</title><link>https://harmstyler.me/posts/2012/optimizing-solr-to-fit-your-needs-part-1/</link><pubDate>Sat, 25 Aug 2012 00:00:00 +0000</pubDate><guid>https://harmstyler.me/posts/2012/optimizing-solr-to-fit-your-needs-part-1/</guid><description>Let me start by saying that eZ Find is a fantastic implementation of Solrfunctionality. With eZ Find you get a fantastic search, out of the box. eZ Find gathers all the content in your system and organizes it for you into strings, text, and keywords (there are more but those the types I use most often). It can look at an eZ Publishkeyword and know that it should thereby be a Solr keyword, again, all out of the box.</description></item><item><title>eZ Publish with Sublime</title><link>https://harmstyler.me/posts/2012/ez-publish-with-sublime/</link><pubDate>Sat, 30 Jun 2012 00:00:00 +0000</pubDate><guid>https://harmstyler.me/posts/2012/ez-publish-with-sublime/</guid><description>A while back I fell in love with Sublime Text 2and its&amp;rsquo; many advantages over TextMate. What it lacked however was any real support for the eZ Publish templating language (no different than TextMate). What I wanted was a simple editor that offered variable and method highlighting equivalent to a nice IDE like PHPStorm. I was originally using the Smarty package for TextMate (you can use any TextMate package in Sublime), but that does not offer a lot of method highlighting support for eZ.</description></item><item><title>Fixing Shards in eZ Find</title><link>https://harmstyler.me/posts/2012/fixing-shards-in-ez-find/</link><pubDate>Fri, 29 Jun 2012 00:00:00 +0000</pubDate><guid>https://harmstyler.me/posts/2012/fixing-shards-in-ez-find/</guid><description>&lt;p>I am way overdue on my promise to show you how to make shards work. As I said before, shards in eZ Find do not work out of the box. In the code the &lt;code>$shardQuery&lt;/code> is built properly but the variable is never actually used after it is created. What I did to make this work is a simple if/else block inside the &lt;code>$queryHandler&lt;/code> switch. I am not submitting this as a pull request to eZ Find at the moment just because I do not like the way I made this work, I feel like there is a better way to do it. Nevertheless here is my code to make Shards work, I hope you enjoy and moreover I hope you suggest a better way to make the code work ;)&lt;/p></description></item><item><title>Solr 3.6 Update</title><link>https://harmstyler.me/posts/2012/solr-3-6-update/</link><pubDate>Mon, 14 May 2012 00:00:00 +0000</pubDate><guid>https://harmstyler.me/posts/2012/solr-3-6-update/</guid><description>Turns out that when using shards to search multiple cores (shards in general actually) binary is not returned properly. I found an update to the trunk (4.x) version of Solr and was successfully able to update my version of Solr 3.6. I am submitting a pull request of the code update to Solr as well a new war file to eZ Find, but in the meantime you can download the solr.</description></item><item><title>Searching Multiple Solr Cores using Shards and eZ Find</title><link>https://harmstyler.me/posts/2012/ezfind-shards/</link><pubDate>Tue, 08 May 2012 00:00:00 +0000</pubDate><guid>https://harmstyler.me/posts/2012/ezfind-shards/</guid><description>&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;span class="lnt">9
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-php" data-lang="php">&lt;span class="cp">&amp;lt;?php&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span> &lt;span class="nx">isset&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nv">$distributedSearch&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;shards&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="k">foreach&lt;/span> &lt;span class="p">(&lt;/span> &lt;span class="nv">$distributedSearch&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;shards&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="k">as&lt;/span> &lt;span class="nv">$shard&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="nv">$shardUrls&lt;/span>&lt;span class="p">[]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nv">$iniShards&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nv">$shard&lt;/span>&lt;span class="p">];&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="nv">$shardQuery&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">implode&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s1">&amp;#39;,&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nv">$shardUrls&lt;/span> &lt;span class="p">);&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;p>Prerequisites:&lt;/p>
&lt;ul>
&lt;li>eZ Publish with eZ Find installed&lt;/li>
&lt;/ul>
&lt;p>The following post is based on the option in the eZ Find &lt;code>solr.ini&lt;/code> referring to Shards.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ini" data-lang="ini">&lt;span class="k">[SolrBase]&lt;/span>
&lt;span class="c1">#Shards mapping, can be to multicores in one servlet or even a crosss servers&lt;/span>
&lt;span class="c1">#typical use is multilingual setups, but also for external index support&lt;/span>
&lt;span class="c1">#the keys are used as shorthands in template functions&lt;/span>
&lt;span class="c1">#Shards[]&lt;/span>
&lt;span class="c1">#Shards[eng-GB]=http://localhost:8983/solr/eng-GB&lt;/span>
&lt;span class="c1">#Shards[fre-FR]=http://localhost:8983/solr/fre-FR&lt;/span>
&lt;span class="c1">#Shards[myforeignindex]=http://myotherhost:8983/solr&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>What this means for eZ Find developers: we can do a distributed search in our standard eZ Find fetch (with a little work).&lt;/p></description></item><item><title>eZ Find: Enable Attribute Storage</title><link>https://harmstyler.me/posts/2012/ez-find-solr-attribute-storage/</link><pubDate>Thu, 26 Apr 2012 00:00:00 +0000</pubDate><guid>https://harmstyler.me/posts/2012/ez-find-solr-attribute-storage/</guid><description># Enable Solr to store all the basic information of a content object # Allows Solr to be used as a cross-site DB [IndexOptions] EnableSolrAttributeStorage=true OptimizeOnCommit=disabled When using eZ Find to search a single local site, it does a really good job at building out the result object to be used. What becomes a problem, however, is when a cross-site search is necessary. When the search fetch includes 'as_objects', true() eZ Find tries to build out an object by fetching from the database after the Solr search is completed and the necessary content is returned.</description></item><item><title>eZ Find Multi-Core</title><link>https://harmstyler.me/posts/2012/ez-find-multi-core/</link><pubDate>Fri, 20 Apr 2012 00:00:00 +0000</pubDate><guid>https://harmstyler.me/posts/2012/ez-find-multi-core/</guid><description>&lt;p>One of the greatest things about eZ Publish as a CMS is its ability to host many websites (siteaccesses) in one eZ Publish install. Recently I had the privilege of working on an eZ install that hosted 4 websites, giving the illusion of a single site experience across multiple urls. We used eZ Find extensively, specifically its multi-core functionality, to get information across the sites with ease. That way, all the sites can keep and maintain their own databases, and what is shared is shared through Solr.&lt;/p>
&lt;!-- raw HTML omitted --></description></item><item><title>Clear Cache in eZ Publish - eZpedia</title><link>https://harmstyler.me/posts/2012/clear-cache-in-ez-publish-ezpedia/</link><pubDate>Thu, 12 Apr 2012 00:00:00 +0000</pubDate><guid>https://harmstyler.me/posts/2012/clear-cache-in-ez-publish-ezpedia/</guid><description>As an eZ Publish developer I know that whenever creating an eZ Publish site the cache can be my best friend in production and worst enemy in development. eZpedia has a great article all about clearing the cache.
Clear Cache in eZ Publish / Solution / Root - eZpedia
My favorite is the manually clearing of the cache. For some reason the clear-cache script sometimes misses some files; so the only way you are going to see your changes is by dumping those files manually.</description></item><item><title>Installing eZ Find</title><link>https://harmstyler.me/posts/2012/installing-ez-find/</link><pubDate>Thu, 22 Mar 2012 00:00:00 +0000</pubDate><guid>https://harmstyler.me/posts/2012/installing-ez-find/</guid><description>&lt;p>Alright, so lets begin installing eZ Find by going out and downloading it from the Github =&amp;gt; &lt;a href="http://bit.ly/GEVOte" title="eZ Find on GitHub">https://github.com/ezsystems/ezfind&lt;/a>.
eZ Find is an eZ Publish extension so: unzip the download, rename the fold &amp;ldquo;ezfind,&amp;rdquo; and then move the &lt;em>ezfind&lt;/em> folder to the &lt;em>extensions&lt;/em> directory of your eZ Publish install.&lt;/p>
&lt;p>So, as with any extension, we have to activate it. Go into your override &lt;code>site.ini.append.php&lt;/code> (settings/override/site.ini.append.php) and add ezfind to your active extension list (&lt;code>ActiveExtensions[]=ezfind&lt;/code>). I added mine just after my main site extension. Easy enough so far right?&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;p>As you had probably already guessed, eZ Find will not without first setting up Solr. Luckily eZ Find comes with the recommended version of Solr for eZ Find. Within the eZ Find extension you should see a &lt;em>java&lt;/em> directory (remember Solr is written in Java?). So what we need to do is copy the java directory and move it to the htdocs level of your eZ Publish install and rename the folder &amp;ldquo;Solr&amp;rdquo; (see the image on the right). There is a lot in the solr directory that we will not need to mess with right now, specifically I will not cover the multicore options right now, just know that eZ Find can run multiple sites/cores on one Solr install. Also note that I just installed Solr locally, but it can also be installed on remote servers.&lt;/p></description></item><item><title>eZ Find Basics</title><link>https://harmstyler.me/posts/2012/ez-find-basics/</link><pubDate>Mon, 19 Mar 2012 00:00:00 +0000</pubDate><guid>https://harmstyler.me/posts/2012/ez-find-basics/</guid><description>I have been thinking a long time about different topics I could use this blog for. I have settled for the moment on an eZ Publish extension that I have used extensively for a while, eZ Find. eZ Find is an ultra-powerful Solr powered search engine made for eZ Publish, authored by Paul Borgermans.
For starters, an introduction to eZ Find &amp;amp; Solr.
Solr is an ultra-powerful search engine built in Java on top of the Apache Lucene project.</description></item></channel></rss>