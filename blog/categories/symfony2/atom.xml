<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Symfony2 | HarmsSite]]></title>
  <link href="http://harmssite.com/blog/categories/symfony2/atom.xml" rel="self"/>
  <link href="http://harmssite.com/"/>
  <updated>2014-02-07T21:08:34-06:00</updated>
  <id>http://harmssite.com/</id>
  <author>
    <name><![CDATA[Tyler Harms]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Abstract Time Stamped Entity in Symfony2]]></title>
    <link href="http://harmssite.com/2014/02/abstract-time-stamped-entity-in-symfony2/"/>
    <updated>2014-02-07T16:56:00-06:00</updated>
    <id>http://harmssite.com/2014/02/abstract-time-stamped-entity-in-symfony2</id>
    <content type="html"><![CDATA[<p>One of my favorite features of Ruby on Rails is that all models are timestamped by default. Ruby on Rails, of course, opts for convention over configuration. Symfony2, on the other hand, opts for configuration over convention. Anyone who has worked with Symfony2 can speak to the mass of config files that exist in a project. I can understand, therefore, why timestamped models (entities) are not a feature in Symfony2. In this post I will show how to add timestamp all your Symfony2 entities. For this post, I chose to use Doctrine as my ORM, so all code show directly relates to Doctrine and Symfony2.</p>

<p>Luckily, adding and updated and created fields to an entity in Symfony2 with Doctrine is quite easy:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="x">&amp;lt;?php</span>
</span><span class='line'><span class="x">/&lt;em&gt;*</span>
</span><span class='line'><span class="x"> * @var \DateTime</span>
</span><span class='line'><span class="x"> *</span>
</span><span class='line'><span class="x"> * @ORM\Column(name=&amp;ldquo;created&amp;rdquo;, type=&amp;ldquo;datetime&amp;rdquo;)</span>
</span><span class='line'><span class="x"> &lt;/em&gt;/</span>
</span><span class='line'><span class="x">private $created;&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="x">&lt;p&gt;/&lt;em&gt;*</span>
</span><span class='line'><span class="x"> * @var \DateTime</span>
</span><span class='line'><span class="x"> *</span>
</span><span class='line'><span class="x"> * @ORM\Column(name=&amp;ldquo;updated&amp;rdquo;, type=&amp;ldquo;datetime&amp;rdquo;)</span>
</span><span class='line'><span class="x"> &lt;/em&gt;/</span>
</span><span class='line'><span class="x">private $updated;&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="x">&lt;p&gt;public function __construct()</span>
</span><span class='line'><span class="x">{&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="x">&lt;pre&gt;&lt;code&gt;$this-&amp;gt;setCreated(new \DateTime());</span>
</span><span class='line'><span class="x">$this-&amp;gt;setUpdated(new \DateTime());</span>
</span><span class='line'><span class="x">&lt;/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="x">&lt;p&gt;}&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="x">&lt;p&gt;// getters &amp;amp; setters&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="x">&lt;p&gt;/&lt;em&gt;*</span>
</span><span class='line'><span class="x"> * Auto set the updated date</span>
</span><span class='line'><span class="x"> *</span>
</span><span class='line'><span class="x"> * @ORM\PreUpdate</span>
</span><span class='line'><span class="x"> &lt;/em&gt;/</span>
</span><span class='line'><span class="x">public function setUpdatedValue()</span>
</span><span class='line'><span class="x">{</span>
</span><span class='line'><span class="x">   $this-&gt;setUpdated(new \DateTime());</span>
</span><span class='line'><span class="x">}&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="x">&lt;p&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>The code should be pretty self explanitory, we have two DateTime field types that get initially set on entity creation in the contstructor. I then add a <code>setUpdatedValue()</code> function that runs when on PreUpdate of the entity.</p>

<p>The above code works very well, but it is not an ideal solution for working with multiple models. Of course, we could add the updated/created values to every entity, but that wouldn&rsquo;t be very <a href="http://en.wikipedia.org/wiki/Don't_repeat_yourself" title="Don't Repeat Yourself">DRY</a> of us.</p>

<!-- more -->


<p>The solution is to use an <a href="http://www.php.net/manual/en/language.oop5.abstract.php">Abstract Class</a> that our entity can extend. The abstract class, <code>TimeStampedEntity</code>, will have two entity variables <code>$updated</code> and <code>$created</code> and will look nearly identical to the code above when it is complete. The key that will make this work with Doctrine and Symfony2 is Doctrine&rsquo;s <a href="http://docs.doctrine-project.org/en/latest/reference/inheritance-mapping.html#mapped-superclasses"><code>MappedSuperclass</code></a> declaration that tells Symfony and Doctrine that the abstract class is a Superclass with declared entity attributes. What we are left with is a Superclass that can extend any model to add <code>updated</code> and <code>created</code> attributes to your data.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>TimeStampedEntity.php <a href="https://gist.github.com/harmstyler/8875484">https://gist.github.com/harmstyler/8875484</a> Gist </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="x">&amp;lt;?php</span>
</span><span class='line'><span class="x">/&lt;em&gt;*</span>
</span><span class='line'><span class="x"> * TimeStampedEntity.php</span>
</span><span class='line'><span class="x"> &lt;/em&gt;/&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="x">&lt;p&gt;namespace HarmsTyler\Common\Entity;&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="x">&lt;p&gt;use Doctrine\ORM\Mapping as ORM;&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="x">&lt;p&gt;/&lt;em&gt;*</span>
</span><span class='line'><span class="x"> * Post</span>
</span><span class='line'><span class="x"> *</span>
</span><span class='line'><span class="x"> * @ORM\MappedSuperclass</span>
</span><span class='line'><span class="x"> * @ORM\HasLifecycleCallbacks</span>
</span><span class='line'><span class="x"> &lt;/em&gt;/</span>
</span><span class='line'><span class="x">abstract class TimeStampedEntity {&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="x">&lt;pre&gt;&lt;code&gt;/**</span>
</span><span class='line'><span class="x"> * @var \DateTime</span>
</span><span class='line'><span class="x"> *</span>
</span><span class='line'><span class="x"> * @ORM\Column(name=&quot;created&quot;, type=&quot;datetime&quot;)</span>
</span><span class='line'><span class="x"> */</span>
</span><span class='line'><span class="x">private $created;</span>
</span><span class='line'>
</span><span class='line'><span class="x">/**</span>
</span><span class='line'><span class="x"> * @var \DateTime</span>
</span><span class='line'><span class="x"> *</span>
</span><span class='line'><span class="x"> * @ORM\Column(name=&quot;updated&quot;, type=&quot;datetime&quot;)</span>
</span><span class='line'><span class="x"> */</span>
</span><span class='line'><span class="x">private $updated;</span>
</span><span class='line'>
</span><span class='line'><span class="x">public function __construct()</span>
</span><span class='line'><span class="x">{</span>
</span><span class='line'><span class="x">    $this-&amp;gt;setCreated(new \DateTime());</span>
</span><span class='line'><span class="x">    $this-&amp;gt;setUpdated(new \DateTime());</span>
</span><span class='line'><span class="x">}</span>
</span><span class='line'>
</span><span class='line'><span class="x">/**</span>
</span><span class='line'><span class="x"> * Set created</span>
</span><span class='line'><span class="x"> *</span>
</span><span class='line'><span class="x"> * @param \DateTime $created</span>
</span><span class='line'><span class="x"> * @return Post</span>
</span><span class='line'><span class="x"> */</span>
</span><span class='line'><span class="x">public function setCreated($created)</span>
</span><span class='line'><span class="x">{</span>
</span><span class='line'><span class="x">    $this-&amp;gt;created = $created;</span>
</span><span class='line'>
</span><span class='line'><span class="x">    return $this;</span>
</span><span class='line'><span class="x">}</span>
</span><span class='line'>
</span><span class='line'><span class="x">/**</span>
</span><span class='line'><span class="x"> * Get created</span>
</span><span class='line'><span class="x"> *</span>
</span><span class='line'><span class="x"> * @return \DateTime</span>
</span><span class='line'><span class="x"> */</span>
</span><span class='line'><span class="x">public function getCreated()</span>
</span><span class='line'><span class="x">{</span>
</span><span class='line'><span class="x">    return $this-&amp;gt;created;</span>
</span><span class='line'><span class="x">}</span>
</span><span class='line'>
</span><span class='line'><span class="x">/**</span>
</span><span class='line'><span class="x"> * Set updated</span>
</span><span class='line'><span class="x"> *</span>
</span><span class='line'><span class="x"> * @param \DateTime $updated</span>
</span><span class='line'><span class="x"> * @return Post</span>
</span><span class='line'><span class="x"> */</span>
</span><span class='line'><span class="x">public function setUpdated($updated)</span>
</span><span class='line'><span class="x">{</span>
</span><span class='line'><span class="x">    $this-&amp;gt;updated = $updated;</span>
</span><span class='line'>
</span><span class='line'><span class="x">    return $this;</span>
</span><span class='line'><span class="x">}</span>
</span><span class='line'>
</span><span class='line'><span class="x">/**</span>
</span><span class='line'><span class="x"> * Get updated</span>
</span><span class='line'><span class="x"> *</span>
</span><span class='line'><span class="x"> * @return \DateTime</span>
</span><span class='line'><span class="x"> */</span>
</span><span class='line'><span class="x">public function getUpdated()</span>
</span><span class='line'><span class="x">{</span>
</span><span class='line'><span class="x">    return $this-&amp;gt;updated;</span>
</span><span class='line'><span class="x">}</span>
</span><span class='line'>
</span><span class='line'><span class="x">/**</span>
</span><span class='line'><span class="x"> * Auto set the updated date</span>
</span><span class='line'><span class="x"> *</span>
</span><span class='line'><span class="x"> * @ORM\PreUpdate</span>
</span><span class='line'><span class="x"> */</span>
</span><span class='line'><span class="x">public function setUpdatedValue()</span>
</span><span class='line'><span class="x">{</span>
</span><span class='line'><span class="x">   $this-&amp;gt;setUpdated(new \DateTime());</span>
</span><span class='line'><span class="x">}</span>
</span><span class='line'><span class="x">&lt;/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="x">&lt;p&gt;}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>An example in use:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>Post.php </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="x">&amp;lt;?php&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="x">&lt;p&gt;namespace Blend\Iterate\BlogBundle\Entity;&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="x">&lt;p&gt;use Doctrine\ORM\Mapping as ORM;&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="x">&lt;p&gt;/&lt;em&gt;*</span>
</span><span class='line'><span class="x"> * Post</span>
</span><span class='line'><span class="x"> *</span>
</span><span class='line'><span class="x"> * @ORM\Table()</span>
</span><span class='line'><span class="x"> * @ORM\Entity</span>
</span><span class='line'><span class="x"> &lt;/em&gt;/</span>
</span><span class='line'><span class="x">class Post extends TimeStampedEntity</span>
</span><span class='line'><span class="x">{</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>
]]></content>
  </entry>
  
</feed>
